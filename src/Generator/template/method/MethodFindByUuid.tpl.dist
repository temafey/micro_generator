
    /**
     * Find and return {readModelName} Read Model by Uuid
     *
     * @throws Exception
     */
    public function {methodName}(Uuid $uuid): ?{readModelName}ReadModelInterface
    {
        try {
            $result = $this->readModelStore->findOne($uuid->toString());
        } catch (NotFoundException) {
            return null;
        }
        $uuid = $result[{readModelName}ReadModelInterface::KEY_UUID];
        unset($result[{readModelName}ReadModelInterface::KEY_UUID]);

        return $this->readModelFactory->make{readModelName}ActualInstance(
            $this->valueObjectFactory->make{entityName}($result),
            $this->valueObjectFactory->makeUuid($uuid)
        );
    }
