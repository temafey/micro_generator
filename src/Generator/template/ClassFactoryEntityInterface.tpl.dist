<?php

declare(strict_types=1);

namespace {namespace};
{useStatement}

/**
 * @interface {interfaceName}
 *
 * @package {namespace}
 */
interface {interfaceName}{extends}
{
    /**
     * Create {shortEntityName} instance from value object with Uuid & ProcessId.
     */
    public function createInstance(
        ProcessUuid $processUuid,
        Uuid $uuid,
        {shortValueObjectName} ${propertyValueObjectName},
        ?Payload $payload = null,
        ?EventFactory $eventFactory = null
    ): {shortEntityInterfaceName};

    /**
     * Create {shortEntityName} instance from value object with Uuid.
     *
     * @throws ValueObjectInvalidException
     */
    public function makeActualInstance(
        Uuid $uuid,
        {shortValueObjectName} ${propertyValueObjectName},
        ?EventFactory $eventFactory = null
    ): {shortEntityInterfaceName};
}
